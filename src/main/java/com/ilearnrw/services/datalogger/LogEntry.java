package com.ilearnrw.services.datalogger;

import java.io.Serializable;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * @author David Johansson
 *
 * DataLogger Log object.
 * 
 * As specified in D6.1_ILearnRW_System_Architecture_final.
 *
 * 
 * 
 */
public class LogEntry implements Serializable {

	public LogEntry(String _userId, String _tag, String _value,
					String _applicationId, Timestamp _timestamp,
					String _sessionId)
	{
		userId = _userId;
		tag = _tag;
		value = _value;
		applicationId = _applicationId;
		DateFormat df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");
		timestamp = df.format(_timestamp);
		sessionId = _sessionId;
	}
	/**
	 * We need the default constructor in order to serialize FROM json
	 * to this object.
	 */
	public LogEntry()
	{}
	private static final long serialVersionUID = -7085054143765991532L;

	/**
	 * The user-id for the user that the particular log
	 * concerns.
	 */
	@JsonProperty("userId")
	private String userId;
    public String getUserId() {
        return userId;
    }

	
	/**
	 * A tag for the LogEntry.
	 */
	@JsonProperty("tag")
	private String tag;
    public String getTag() {
        return tag;
    }
	/**
	 * A value stored with the log.
	 * 
	 */
	@JsonProperty("value")
	private String value;
    public String getValue() {
        return value;
    }
	
	/**
	 * An application identifier.
	 */
	@JsonProperty("applicationId")
	private String applicationId;
    public String getApplicationId() {
        return applicationId;
    }
	

	@JsonProperty("timestamp")
	private String timestamp;
	public String getTimestamp()
	{
		return timestamp;
	}
	
	/**
	 * A sessionId.
	 * 
	 * The sessionId would be generated by the client to identify
	 * a specific session.
	 * 
	 */
	@JsonProperty("sessionId")
	private String sessionId;
    public String getSessionId() {
        return sessionId;
    }
}
